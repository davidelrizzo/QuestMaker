{
    "project": {},
    "files": {
        "File\\ajax.js": {
            "name": "File\\ajax.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "File\\json.js": {
            "name": "File\\json.js",
            "modules": {},
            "classes": {
                "json": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Graphics\\display.js": {
            "name": "Graphics\\display.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Graphics\\pixel.js": {
            "name": "Graphics\\pixel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Graphics\\sprite.js": {
            "name": "Graphics\\sprite.js",
            "modules": {
                "graphics": 1
            },
            "classes": {
                "graphics": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Graphics\\spriteSheet.js": {
            "name": "Graphics\\spriteSheet.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Input\\keyboard.js": {
            "name": "Input\\keyboard.js",
            "modules": {
                "input": 1
            },
            "classes": {
                "keybaord": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Input\\mouse.js": {
            "name": "Input\\mouse.js",
            "modules": {},
            "classes": {
                "input": 1,
                "mouse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "StandardLib\\MessagePump.js": {
            "name": "StandardLib\\MessagePump.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "User Interface\\button.js": {
            "name": "User Interface\\button.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "User Interface\\hud.js": {
            "name": "User Interface\\hud.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "agent.js": {
            "name": "agent.js",
            "modules": {},
            "classes": {
                "Agent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "assets.js": {
            "name": "assets.js",
            "modules": {},
            "classes": {
                "assets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "campaign.js": {
            "name": "campaign.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cell.js": {
            "name": "cell.js",
            "modules": {},
            "classes": {
                "Cell": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dice.js": {
            "name": "dice.js",
            "modules": {},
            "classes": {
                "Dice": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "door.js": {
            "name": "door.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "gh.js": {
            "name": "gh.js",
            "modules": {
                "gh": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "gh.js.bak.js": {
            "name": "gh.js.bak.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "level.js": {
            "name": "level.js",
            "modules": {},
            "classes": {
                "Level": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "map.js": {
            "name": "map.js",
            "modules": {},
            "classes": {
                "Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "messagePump.js": {
            "name": "messagePump.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "stateGame.js": {
            "name": "stateGame.js",
            "modules": {},
            "classes": {
                "stateGame": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "stateSetup.js": {
            "name": "stateSetup.js",
            "modules": {},
            "classes": {
                "stateSetup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "team.js": {
            "name": "team.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "trigger.js": {
            "name": "trigger.js",
            "modules": {},
            "classes": {
                "Trigger": 1,
                "EntryTrigger": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "turn.js": {
            "name": "turn.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "user.js": {
            "name": "user.js",
            "modules": {},
            "classes": {
                "gh": 1,
                "User": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "wall.js": {
            "name": "wall.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "gh": {
            "name": "gh",
            "submodules": {},
            "elements": {},
            "classes": {
                "gh": 1,
                "json": 1,
                "Agent": 1,
                "assets": 1,
                "Cell": 1,
                "Dice": 1,
                "Level": 1,
                "Map": 1,
                "stateGame": 1,
                "stateSetup": 1,
                "Trigger": 1,
                "EntryTrigger": 1,
                "User": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "user.js",
            "line": 13,
            "itemtype": "main"
        },
        "graphics": {
            "name": "graphics",
            "submodules": {},
            "elements": {},
            "classes": {
                "graphics": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Graphics\\sprite.js",
            "line": 17,
            "description": "FILE sprite.js\nDESC\nREQUIRES\n   pixel.js\nTO DO\n       o add rotation capability\n       o add cursor hit detection\n       o this requires a imageData storage component\n         build this when the sprite is initialized?"
        },
        "input": {
            "name": "input",
            "submodules": {},
            "elements": {},
            "classes": {
                "input": 1,
                "keybaord": 1,
                "mouse": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "Input\\mouse.js",
            "line": 12,
            "itemtype": "main",
            "module": "input"
        }
    },
    "classes": {
        "gh": {
            "name": "gh",
            "shortname": "gh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "user.js",
            "line": 7
        },
        "json": {
            "name": "json",
            "shortname": "json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "File\\json.js",
            "line": 20,
            "is_constructor": 1
        },
        "graphics": {
            "name": "graphics",
            "shortname": "graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "Graphics\\sprite.js",
            "line": 17
        },
        "input": {
            "name": "input",
            "shortname": "input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "input",
            "namespace": "",
            "file": "Input\\mouse.js",
            "line": 7
        },
        "keybaord": {
            "name": "keybaord",
            "shortname": "keybaord",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "input",
            "namespace": "",
            "file": "Input\\keyboard.js",
            "line": 13,
            "submodule": "input"
        },
        "mouse": {
            "name": "mouse",
            "shortname": "mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "input",
            "namespace": "",
            "file": "Input\\mouse.js",
            "line": 12,
            "submodule": "input"
        },
        "Agent": {
            "name": "Agent",
            "shortname": "Agent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "agent.js",
            "line": 13,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "name",
                    "description": "The identifier of the agent.",
                    "type": "String"
                },
                {
                    "name": "position",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": "The name of the team (faction) that the agent belongs to.",
                    "type": "String"
                },
                {
                    "name": "sprites",
                    "description": "An object which contains the images for the various action states the agent might be in.",
                    "type": "Object"
                },
                {
                    "name": "moveDice",
                    "description": "The number of dice rolled when a user moves.",
                    "type": "Integer"
                },
                {
                    "name": "baseMove",
                    "description": ""
                },
                {
                    "name": "active",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            }
        },
        "assets": {
            "name": "assets",
            "shortname": "assets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "assets.js",
            "line": 25
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "cell.js",
            "line": 16,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "x",
                    "description": "The x-coordinate of a cell.",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y-coordinate of a cell.",
                    "type": "Integer"
                },
                {
                    "name": "walkable",
                    "description": ""
                },
                {
                    "name": "visible",
                    "description": ""
                },
                {
                    "name": "borders",
                    "description": "The borders of the cell.",
                    "type": "Object"
                },
                {
                    "name": "items",
                    "description": ""
                },
                {
                    "name": "agents",
                    "description": ""
                },
                {
                    "name": "triggers",
                    "description": ""
                },
                {
                    "name": "img",
                    "description": "The sprite reperasentative of the cell.",
                    "type": "Sprite"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "Dice": {
            "name": "Dice",
            "shortname": "Dice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "dice.js",
            "line": 13,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "sides",
                    "description": "The number of sides the dice has, defaults to 6.",
                    "type": "Integer"
                },
                {
                    "name": "spriteSheet",
                    "description": "The index name of the sprite sheet  of the dice.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "Level": {
            "name": "Level",
            "shortname": "Level",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "level.js",
            "line": 13,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the level.",
                    "type": "String"
                },
                {
                    "name": "introText",
                    "description": "The introductory text for the level.",
                    "type": "String"
                },
                {
                    "name": "maxHeroes",
                    "description": ""
                },
                {
                    "name": "availableHeroes",
                    "description": "An array of",
                    "type": "Array"
                },
                {
                    "name": "teams",
                    "description": ""
                },
                {
                    "name": "map",
                    "description": ""
                },
                {
                    "name": "agents",
                    "description": ""
                },
                {
                    "name": "triggers",
                    "description": ""
                },
                {
                    "name": "stdGraphics",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            }
        },
        "Map": {
            "name": "Map",
            "shortname": "Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "map.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "floor",
                    "description": "A 2d array of Cell objects.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "stateGame": {
            "name": "stateGame",
            "shortname": "stateGame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "stateGame.js",
            "line": 13
        },
        "stateSetup": {
            "name": "stateSetup",
            "shortname": "stateSetup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "stateSetup.js",
            "line": 12,
            "description": "DESC This class singleton handles the setup phase of the game.\n     The user selectes the initial placement of the starting heroes.\n     The user might enter through a door, or alternatively, pre-selected\n     starting squares.\n\n     Starting squres: these are highlighted and the user may place a \n     hero by left clicking on them.\n\n     Starting door: this is more complicated as in reality the player\n     moves through it on the first turn.  That is to say it doesn't fit\n     within the starting square paradigm and more appropriately belongs in\n     the gameState phase of the application.  However, this would then\n     require a check to see if the player is on the board every level?\n\n     Maybe consider rebuilding.  Each player has a starting action sequence\n     that should be completed before proceeding to a standard action phase?\n\n     Eg \n\t\t\tif play.position !== onBoard\n\t\t\t\tplace at entry location"
        },
        "Trigger": {
            "name": "Trigger",
            "shortname": "Trigger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "trigger.js",
            "line": 12,
            "description": "Description",
            "itemtype": "method",
            "params": [
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "active",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            }
        },
        "EntryTrigger": {
            "name": "EntryTrigger",
            "shortname": "EntryTrigger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "trigger.js",
            "line": 45,
            "description": "Description",
            "subclass": "Trigger",
            "itemtype": "method",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            }
        },
        "User": {
            "name": "User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gh",
            "namespace": "",
            "file": "user.js",
            "line": 13,
            "is_constructor": 1,
            "itemtype": "method",
            "params": [
                {
                    "name": "team",
                    "description": "The name of the team which the user 'player' belongs to.",
                    "type": "String"
                },
                {
                    "name": "roster",
                    "description": "An array containing the agents belonging to the user.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": ""
            }
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "File\\ajax.js",
            "line": 6,
            "description": "Description",
            "itemtype": "method",
            "name": "getAJAX",
            "params": [
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 26,
            "description": "This method loads a campaign from a number of json files located within the given directory.\nThis method assumes the following file structure:\n'directory'/'campaignName'\n'directory'/'campaignName'/Data/ - This folder houses the relevant json assets\n'directory'/'campaignName'/Graphics/ - This folder houses the relevant graphic assets",
            "itemtype": "method",
            "name": "getCampaign",
            "params": [
                {
                    "name": "directory",
                    "description": "The directory in which the campaign data is located.",
                    "type": "String"
                },
                {
                    "name": "campaignName",
                    "description": "The name of the campaign json file.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "campaign"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 54,
            "description": "Description",
            "itemtype": "method",
            "name": "loadDataFile",
            "params": [
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "return": {
                "description": "data"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 69,
            "description": "Description",
            "itemtype": "method",
            "name": "getCampaignLevels",
            "params": [
                {
                    "name": "jsonLevels",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": ""
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": ""
                }
            ],
            "return": {
                "description": "levels"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 91,
            "description": "Description",
            "itemtype": "method",
            "name": "getLevel",
            "params": [
                {
                    "name": "directory",
                    "description": "The directory in which the campaign data is located.",
                    "type": "String"
                },
                {
                    "name": "levelName",
                    "description": ""
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": ""
                }
            ],
            "return": {
                "description": "level"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 128,
            "description": "Description",
            "itemtype": "method",
            "name": "getTeams",
            "params": [
                {
                    "name": "jsonTeam",
                    "description": ""
                }
            ],
            "return": {
                "description": "teams"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 144,
            "description": "This method builds an array of agents which are present in a level.",
            "itemtype": "method",
            "name": "getAgents",
            "params": [
                {
                    "name": "jsonAgents",
                    "description": ""
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": ""
                }
            ],
            "return": {
                "description": "agents"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 170,
            "description": "Description",
            "itemtype": "method",
            "name": "getFloor",
            "params": [
                {
                    "name": "jsonMap",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": ""
                },
                {
                    "name": "jsonStdGraphics",
                    "description": ""
                },
                {
                    "name": "agents",
                    "description": ""
                },
                {
                    "name": "itmes",
                    "description": ""
                },
                {
                    "name": "triggers",
                    "description": ""
                }
            ],
            "return": {
                "description": "floor"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 189,
            "description": "Get the borders",
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 267,
            "description": "Description",
            "itemtype": "method",
            "name": "addAgents",
            "params": [
                {
                    "name": "map",
                    "description": ""
                },
                {
                    "name": "agents",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 281,
            "description": "Description",
            "itemtype": "method",
            "name": "addTriggers",
            "params": [
                {
                    "name": "map",
                    "description": ""
                },
                {
                    "name": "triggers",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 299,
            "description": "This method builds a 2d list of agents, with the location of the agent on the map the same as its\nlocation in the 2d array.\nThis method has been depreciated and no longer part of the framework.\nA key weakness of this method is it does not (without alteration) permit multible agents to occupy a cell.",
            "itemtype": "method",
            "name": "getAgentGrid",
            "params": [
                {
                    "name": "jsonAgents",
                    "description": ""
                },
                {
                    "name": "jsonAgentTemplates",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": "This variable is currently not utilized by the method.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "agents"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "File\\json.js",
            "line": 331,
            "description": "Description",
            "itemtype": "method",
            "name": "getTriggers",
            "params": [
                {
                    "name": "jsonTriggers",
                    "description": ""
                }
            ],
            "return": {
                "description": "triggers"
            },
            "class": "json",
            "module": "gh"
        },
        {
            "file": "Graphics\\display.js",
            "line": 1,
            "description": "TO DO\n   Separate the display to include a 'board' and a 'hud'.\n   The 'board' is intended to display the active game.\n   The hud displays the user interaction tools.  EG, weapon slots,\n   spells, potions, etc...\n\n   Consider having the display 'listen' for changes to the keyboard state.",
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\display.js",
            "line": 16,
            "description": "Description",
            "itemtype": "method",
            "name": "Display",
            "params": [
                {
                    "name": "canvasID",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\display.js",
            "line": 30,
            "description": "Description",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\display.js",
            "line": 39,
            "description": "Description",
            "itemtype": "method",
            "name": "getMouseToCell",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "pos"
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\pixel.js",
            "line": 7,
            "description": "Description",
            "itemtype": "method",
            "name": "Pixel",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                },
                {
                    "name": "a",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\pixel.js",
            "line": 23,
            "description": "Description",
            "itemtype": "method",
            "name": "isTransparent",
            "return": {
                "description": "Literal"
            },
            "class": "graphics",
            "module": "gh"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 23,
            "description": "Globals",
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 33,
            "description": "Description",
            "itemtype": "method",
            "name": "getLoaded",
            "return": {
                "description": "loaded"
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 42,
            "description": "Description",
            "itemtype": "method",
            "name": "Sprite",
            "params": [
                {
                    "name": "path",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 58,
            "description": "Description",
            "itemtype": "method",
            "name": "onload",
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 67,
            "description": "Description",
            "itemtype": "method",
            "name": "buildImageData",
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 82,
            "description": "Description",
            "itemtype": "method",
            "name": "getPixelColor",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "pixel"
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 106,
            "description": "Description",
            "itemtype": "method",
            "name": "isMouseOver",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\sprite.js",
            "line": 118,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "w",
                    "description": ""
                },
                {
                    "name": "h",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "graphics",
            "module": "graphics"
        },
        {
            "file": "Graphics\\spriteSheet.js",
            "line": 6,
            "description": "Description",
            "itemtype": "method",
            "name": "SpriteSheet",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                },
                {
                    "name": "interval",
                    "description": ""
                },
                {
                    "name": "state",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "input",
            "module": "graphics"
        },
        {
            "file": "Graphics\\spriteSheet.js",
            "line": 24,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "w",
                    "description": ""
                },
                {
                    "name": "h",
                    "description": ""
                },
                {
                    "name": "state",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "input",
            "module": "graphics"
        },
        {
            "file": "Input\\keyboard.js",
            "line": 34,
            "description": "Description",
            "itemtype": "method",
            "name": "onKeyDown",
            "params": [
                {
                    "name": "evt",
                    "description": "An event which contains the relevant KeyCode data.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "keybaord",
            "module": "input",
            "submodule": "input"
        },
        {
            "file": "Input\\keyboard.js",
            "line": 53,
            "description": "Description",
            "itemtype": "method",
            "name": "onKeyUp",
            "params": [
                {
                    "name": "evt",
                    "description": "An event which contains the relevant KeyCode data.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "keybaord",
            "module": "input",
            "submodule": "input"
        },
        {
            "file": "Input\\keyboard.js",
            "line": 65,
            "description": "This method determines whether or not a key has been pressed or not for the first time.",
            "itemtype": "method",
            "name": "isPressed",
            "params": [
                {
                    "name": "key",
                    "description": "The ascii value of the key for which to querry its state.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "keybaord",
            "module": "input",
            "submodule": "input"
        },
        {
            "file": "Input\\mouse.js",
            "line": 21,
            "description": "Description",
            "itemtype": "method",
            "name": "onMouseMove",
            "params": [
                {
                    "name": "evt",
                    "description": "An event which contains the relevant mouse data.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "mouse",
            "module": "input",
            "submodule": "input"
        },
        {
            "file": "Input\\mouse.js",
            "line": 35,
            "description": "Description",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "evt",
                    "description": "An event which contains the relevant mouse data.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "mouse",
            "module": "input",
            "submodule": "input"
        },
        {
            "file": "StandardLib\\MessagePump.js",
            "line": 7,
            "description": "Description",
            "itemtype": "method",
            "name": "MessagePump",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "StandardLib\\MessagePump.js",
            "line": 17,
            "description": "Description",
            "itemtype": "method",
            "name": "addListener",
            "params": [
                {
                    "name": "msg",
                    "description": ""
                },
                {
                    "name": "el",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "StandardLib\\MessagePump.js",
            "line": 30,
            "description": "Description",
            "itemtype": "method",
            "name": "postMessage",
            "params": [
                {
                    "name": "msg",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "StandardLib\\MessagePump.js",
            "line": 41,
            "description": "Description",
            "itemtype": "method",
            "name": "getMessage",
            "return": {
                "description": "undefined"
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "StandardLib\\MessagePump.js",
            "line": 54,
            "description": "Description",
            "itemtype": "method",
            "name": "handleMessages",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "User Interface\\button.js",
            "line": 6,
            "description": "Description",
            "itemtype": "method",
            "name": "Button",
            "params": [
                {
                    "name": "id",
                    "description": ""
                },
                {
                    "name": "spriteSheet",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "User Interface\\button.js",
            "line": 18,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "w",
                    "description": ""
                },
                {
                    "name": "h",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "User Interface\\hud.js",
            "line": 8,
            "description": "Private globals",
            "class": "gh",
            "module": "input"
        },
        {
            "file": "User Interface\\hud.js",
            "line": 18,
            "description": "Public methods",
            "class": "gh",
            "module": "input"
        },
        {
            "file": "User Interface\\hud.js",
            "line": 22,
            "itemtype": "method",
            "name": "draw",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "input"
        },
        {
            "file": "agent.js",
            "line": 39,
            "description": "Description",
            "itemtype": "method",
            "name": "newTurn",
            "params": [
                {
                    "name": "dice",
                    "description": "A dice of the requisite number of sides to be used when 'rolling' the agents potential movement.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 57,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "imgState",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "spriteTable",
                    "description": "An object which contains images indexed by their sprite name.",
                    "type": "Objext"
                },
                {
                    "name": "context",
                    "description": "The context upon which the agent is drawn.",
                    "type": "Context"
                },
                {
                    "name": "scale",
                    "description": "The scale to which the agent is drawn.",
                    "type": "Flaot"
                },
                {
                    "name": "cellSize",
                    "description": "The size of a cell on the map.  This is used to help scale the image to the correct size.",
                    "type": "Num"
                },
                {
                    "name": "offset",
                    "description": "The map viewport offset which is used to help determine where the image should be drawn on the context.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 78,
            "description": "This method moves the agent one step up, down, left or rigth.\nIt currently checks to ensure the move is valid. If the move is not valid the method simply returns without making any changes to the agents location.\nTO DO\nAdd conditionals to the parameters for checking aspects of a valid move.\nEG a clipping option to allow the player to move through border obstructions, or an option to define which agents can or can not be moved through.\n\t\t\t\t\targs.direction\n                     args.map\n                     args.agents\n                     args.objects",
            "itemtype": "method",
            "name": "onMove",
            "params": [
                {
                    "name": "args",
                    "description": "args.direction is one of four values: \"left\", \"right\", \"up\" and \"down\".",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 93,
            "description": "if(!this.currentTurn){\n\treturn;\n}",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 101,
            "description": "Does the agent have any movement left?",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 119,
            "description": "If the border of the cell would block movement in the desired direction return.",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 153,
            "description": "Is the desired destination a \"walkable\" cell",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 163,
            "description": "Check to see if the target cell is already occupied by another agent.",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 172,
            "description": "The move is valid.",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 178,
            "description": "Remove the map's current reference to the agent.",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 190,
            "description": "Update the agents knowledge of its own location.",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 196,
            "description": "Update the agents location on the map",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 202,
            "description": "Update the map visiblity",
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 209,
            "description": "INPUT\n   args:\n       mouseX\n       mouseY\n       cellX\n       cellY\n       cellSize\n       offset {x, y}\n       scale\n       cell\n       agents\nAgents get priority focus, so need to disable the focus on any\nother objects in a cell if the mouse is over the agent.",
            "itemtype": "method",
            "name": "onMouseOver",
            "params": [
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "agent.js",
            "line": 264,
            "description": "Description",
            "itemtype": "method",
            "name": "isMouseOver",
            "params": [
                {
                    "name": "cellX",
                    "description": ""
                },
                {
                    "name": "cellY",
                    "description": ""
                },
                {
                    "name": "mouseX",
                    "description": ""
                },
                {
                    "name": "mouseY",
                    "description": ""
                },
                {
                    "name": "cellSize",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "Agent",
            "module": "gh"
        },
        {
            "file": "assets.js",
            "line": 30,
            "description": "Description",
            "itemtype": "method",
            "name": "loadMapSprites",
            "params": [
                {
                    "name": "jsonMap",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "assets",
            "module": "gh"
        },
        {
            "file": "assets.js",
            "line": 49,
            "description": "Description",
            "itemtype": "method",
            "name": "loadStdGraphics",
            "params": [
                {
                    "name": "jsonStdGraphics",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "assets",
            "module": "gh"
        },
        {
            "file": "assets.js",
            "line": 68,
            "description": "Description",
            "itemtype": "method",
            "name": "loadAgentSprites",
            "params": [
                {
                    "name": "jsonAgents",
                    "description": ""
                },
                {
                    "name": "directory",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "assets",
            "module": "gh"
        },
        {
            "file": "assets.js",
            "line": 86,
            "description": "Description",
            "itemtype": "method",
            "name": "loadDiceSprites",
            "params": [
                {
                    "name": "directory",
                    "description": "The path in which the image of the dice is located.  This should be a sprite sheet with each side fo the die depicted.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The name of the image in the directory.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "assets",
            "module": "gh"
        },
        {
            "file": "campaign.js",
            "line": 5,
            "description": "Description",
            "itemtype": "method",
            "name": "Campaign",
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "introText",
                    "description": ""
                },
                {
                    "name": "agentTemplates",
                    "description": ""
                },
                {
                    "name": "levels",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "cell.js",
            "line": 44,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "cell.js",
            "line": 137,
            "description": "Description",
            "itemtype": "method",
            "name": "getDoors",
            "return": {
                "description": "doors"
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "cell.js",
            "line": 154,
            "description": "This function returns true if the cell is a walkable 'floor'.\nThis function returns false if the cell is not a walkable 'floor'.",
            "itemtype": "method",
            "name": "isFloor",
            "return": {
                "description": "Literal"
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "cell.js",
            "line": 169,
            "description": "This method determines whether or not the border of a cell is 'blocked'.  A wall, closed door or closed secret-door all qualify as blocking objects.  Open doors and open secret doors do not qualify as blocking objects.",
            "itemtype": "method",
            "name": "isBorderBlocked",
            "params": [
                {
                    "name": "side",
                    "description": "The border of the cell which should be checked.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "Cell",
            "module": "gh"
        },
        {
            "file": "dice.js",
            "line": 26,
            "description": "Roll the dice with the resulting roll being returned.",
            "itemtype": "method",
            "name": "roll",
            "return": {
                "description": "BinaryExpression"
            },
            "class": "Dice",
            "module": "gh"
        },
        {
            "file": "dice.js",
            "line": 35,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "num",
                    "description": "The number value of the side of the dice to draw.",
                    "type": "Integer"
                },
                {
                    "name": "context",
                    "description": "The canvas context upon which to draw.",
                    "type": "Object"
                },
                {
                    "name": "x",
                    "description": "The x coordinate where to draw from.",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "The y coordinate where to draw from.",
                    "type": "Integer"
                },
                {
                    "name": "w",
                    "description": "The width fo the image to be drawn.",
                    "type": "Integer"
                },
                {
                    "name": "h",
                    "description": "The height of the image to be drawn.",
                    "type": "Integer"
                },
                {
                    "name": "sprites",
                    "description": "An object containing Sprites indexed by the name of the image.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Dice",
            "module": "gh"
        },
        {
            "file": "door.js",
            "line": 6,
            "description": "INPUT\n   cell1, cell2: \n       A string denoting the side of a cell which the door\n       occupies.  Accepted values are \"top\", \"left\", \"right\", \"bottom\".\n   x1, y1, x2, y2: \n       a number value representing a cell x or y\n       coordinate in the map.\n   open: \n       boolean value noting whether or not the door is opem.\n   images: \n       the sprites which depict the door in its various states.",
            "itemtype": "method",
            "name": "Door",
            "params": [
                {
                    "name": "cell1",
                    "description": ""
                },
                {
                    "name": "x1",
                    "description": ""
                },
                {
                    "name": "y1",
                    "description": ""
                },
                {
                    "name": "cell2",
                    "description": ""
                },
                {
                    "name": "x2",
                    "description": ""
                },
                {
                    "name": "y2",
                    "description": ""
                },
                {
                    "name": "open",
                    "description": ""
                },
                {
                    "name": "images",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "door.js",
            "line": 49,
            "description": "DESC\n   Change the state of the door from open to closed or vis versa.\nINPUT\n   args:",
            "itemtype": "method",
            "name": "onUse",
            "params": [
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "door.js",
            "line": 74,
            "description": "INPUT\n   args:\n       mouseX\n       mouseY\n       cellX\n       cellY\n       cellSize\n       offset {x, y}\n       scale\n       cell\n       agents",
            "itemtype": "method",
            "name": "onMouseOver",
            "params": [
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "door.js",
            "line": 201,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "side",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 15,
            "description": "Public globals.",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 21,
            "description": "Public methods",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 26,
            "description": "Prep the application for running here by laoding the requisit file data and initializing the gameStates.\n1) Load the display object.\n2) Load the campaign data from JSON sources.\n3) Load game assets (graphics, music, etc.).\n4) initialize the stateSetup prior to its use.",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "canvasID",
                    "description": "The identifier of a DOM canvas element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 48,
            "description": "Load the campaign data here.\nThis method is a dummy method. It is assumed that a game menu system, when followed, will\nreplace this.",
            "itemtype": "method",
            "name": "loadCampaignData",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 61,
            "description": "Load the image data and music data.",
            "itemtype": "method",
            "name": "loadAssets",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 74,
            "description": "The main game loop",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js",
            "line": 85,
            "description": "Dummy function to generate a group of starting heroes for placement.",
            "itemtype": "method",
            "name": "generateStartingPlayers",
            "params": [
                {
                    "name": "jsonAgentTemplates",
                    "description": "A json object which defines the properties of agents in the game.",
                    "type": "Json"
                }
            ],
            "return": {
                "description": "players"
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 15,
            "description": "Public globals.",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 22,
            "description": "Prep the application for running here by laoding the requisit file data and initializing the gameStates.\n1) Load the display object.\n2) Load the campaign data from JSON sources.\n3) Load game assets (graphics, music, etc.).\n4) initialize the stateSetup prior to its use.",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "canvasID",
                    "description": "The identifier of a DOM canvas element.",
                    "type": "String"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 42,
            "description": "Load the dice sprite sheet",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 52,
            "description": "Load the campaign data here.\nThis method is a dummy method. It is assumed that a game menu system, when followed, will\nreplace this.",
            "itemtype": "method",
            "name": "loadCampaignData",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 64,
            "description": "Load the image data and music data.",
            "itemtype": "method",
            "name": "loadAssets",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 76,
            "description": "The main game loop",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "gh.js.bak.js",
            "line": 87,
            "description": "Dummy function to generate a group of starting heroes for placement.",
            "itemtype": "method",
            "name": "generateStartingPlayers",
            "params": [
                {
                    "name": "jsonAgentTemplates",
                    "description": "A json object which defines the properties of agents in the game.",
                    "type": "Json"
                }
            ],
            "return": {
                "description": "players"
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "level.js",
            "line": 40,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "level.js",
            "line": 55,
            "description": "This method draws the visible agents to the board.",
            "itemtype": "method",
            "name": "drawAgents",
            "params": [
                {
                    "name": "context",
                    "description": "The context upon which to draw.",
                    "type": "Object"
                },
                {
                    "name": "scale",
                    "description": "The scale to draw the agent by.",
                    "type": "Float"
                },
                {
                    "name": "size",
                    "description": "The cell size of the map grid.",
                    "type": "Integer"
                },
                {
                    "name": "offset",
                    "description": "An object which cointains the viewport x and y offset for drawing.",
                    "type": "Object"
                },
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "level.js",
            "line": 75,
            "description": "Description",
            "itemtype": "method",
            "name": "drawEntryTriggers",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "level.js",
            "line": 92,
            "description": "Description",
            "itemtype": "method",
            "name": "isEntryTriggerSelected",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Level",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 23,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 49,
            "description": "Description",
            "itemtype": "method",
            "name": "drawFloor",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 71,
            "description": "Description",
            "itemtype": "method",
            "name": "drawGrid",
            "params": [
                {
                    "name": "canvas",
                    "description": ""
                },
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 101,
            "description": "To build a list of unique doors (a door is refferenced twice in every map)\nit is necessary to select only the 'left' and 'top' doors.",
            "itemtype": "method",
            "name": "getDoors",
            "return": {
                "description": "doors"
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 130,
            "description": "Description",
            "itemtype": "method",
            "name": "getAgentsAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "agents"
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 149,
            "description": "Description",
            "itemtype": "method",
            "name": "updateAgentView",
            "params": [
                {
                    "name": "agent",
                    "description": "The agent for which the map visibility should be updated.",
                    "type": "Agent"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 174,
            "description": "Description",
            "itemtype": "method",
            "name": "clearVisibility",
            "params": [
                {
                    "name": "teams",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 191,
            "description": "DESC\n\tThis function sets the visibility of a ray of cells from the first cell in\n\tthe ray.  This function checks for doors and walls which may obstruct the\n\trays 'line of sight'.\n\tINPUT\n\tray: \t\tan array of cells which are in a line\n\tfaction: \tthe string reference of the faction for which to set visibility\n\tvisible: \tthe visibility to set the cells to",
            "itemtype": "method",
            "name": "setRayVisibility",
            "params": [
                {
                    "name": "ray",
                    "description": ""
                },
                {
                    "name": "faction",
                    "description": ""
                },
                {
                    "name": "visible",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "map.js",
            "line": 281,
            "description": "DESC\n\tThis function returns an array of cells that lie between two points.\n     This line is not interrupted by lack of visibility or objects.",
            "itemtype": "method",
            "name": "getLine",
            "params": [
                {
                    "name": "x0",
                    "description": ""
                },
                {
                    "name": "y0",
                    "description": ""
                },
                {
                    "name": "x1",
                    "description": ""
                },
                {
                    "name": "y1",
                    "description": ""
                }
            ],
            "return": {
                "description": "path"
            },
            "class": "Map",
            "module": "gh"
        },
        {
            "file": "messagePump.js",
            "line": 5,
            "description": "Private Globals",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "messagePump.js",
            "line": 10,
            "description": "Description",
            "itemtype": "method",
            "name": "getMessage",
            "params": [
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "return": {
                "description": "CallExpression"
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "messagePump.js",
            "line": 24,
            "description": "Description",
            "itemtype": "method",
            "name": "postMessage",
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "messagePump.js",
            "line": 41,
            "description": "Description",
            "itemtype": "method",
            "name": "addListener",
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 20,
            "description": "This method must be called prior to the run method.\nIt is responsible for:\n1) Setting up the message listening queue's for agents, objects, borders, cells and triggers.",
            "itemtype": "method",
            "name": "initialize",
            "return": {
                "description": ""
            },
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 29,
            "description": "Setup message listeners",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 49,
            "description": "This method calls the update and render methods.",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "Literal"
            },
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 61,
            "description": "This method adjudicates user mouse and keyboard input and updates message queues accordingly.",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "Literal"
            },
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 92,
            "description": "Handle mouse input.",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 103,
            "description": "Handle keyboard input.",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 190,
            "description": "This method draws the board to the canvas with respect to a players (team) view.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": ""
            },
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 198,
            "description": "Draw the game board",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateGame.js",
            "line": 214,
            "description": "Draw the hud",
            "class": "stateGame",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 39,
            "description": "Private globals",
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 44,
            "description": "Public globals",
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 50,
            "description": "Add message handlers\nSetup board visiblity",
            "itemtype": "method",
            "name": "initialize",
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 104,
            "description": "Description",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "Literal"
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 130,
            "description": "Description",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "Literal"
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 203,
            "description": "Draw the visible map\nDraw the borders\nDraw objects\nDraw agents\nDraw the grid",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 231,
            "description": "DESC\n  This function is intended to set the focus of a given cell to\n  the object which is beneith the mouse.\nNOTE\n  This function may be redundant.\n  To an extent couple with gh.display.",
            "itemtype": "method",
            "name": "setMouseFocus",
            "params": [
                {
                    "name": "cellX",
                    "description": "The x coordinate of the cell which the mouse is over.",
                    "type": "Integer"
                },
                {
                    "name": "cellY",
                    "description": "The y coordinate of the cell which the mouse is over.",
                    "type": "Integer"
                },
                {
                    "name": "mouseX",
                    "description": "The x coordinate of the mouse cursor on the screen.",
                    "type": "Integer"
                },
                {
                    "name": "mouseY",
                    "description": "The y coordinate of the mouse cursor on the screen.",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "stateSetup.js",
            "line": 274,
            "description": "Description",
            "itemtype": "method",
            "name": "addPlayer",
            "params": [
                {
                    "name": "args.y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": ""
            },
            "class": "stateSetup",
            "module": "gh"
        },
        {
            "file": "team.js",
            "line": 5,
            "description": "Description",
            "itemtype": "method",
            "name": "Team",
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "relations",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "team.js",
            "line": 17,
            "description": "Description",
            "itemtype": "method",
            "name": "getRelation",
            "params": [
                {
                    "name": "team",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "trigger.js",
            "line": 30,
            "description": "Description",
            "itemtype": "method",
            "name": "isCell",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "Literal"
            },
            "class": "Trigger",
            "module": "gh"
        },
        {
            "file": "trigger.js",
            "line": 59,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "trigger.js",
            "line": 80,
            "description": "Description",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "args",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "trigger.js",
            "line": 94,
            "description": "CLASS ExitTirgger",
            "itemtype": "method",
            "name": "ExitTrigger",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "trigger.js",
            "line": 106,
            "description": "Description",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "EntryTrigger",
            "module": "gh"
        },
        {
            "file": "turn.js",
            "line": 1,
            "description": "What sort of turn structure do I want.\nSort first by teams.  Each team goes at one time.\nThis should be a list to allow for easy rotation.\nAssume the players belong to one team.",
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "turn.js",
            "line": 18,
            "description": "Description",
            "itemtype": "method",
            "name": "TurnOrder",
            "params": [
                {
                    "name": "playerOrder",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "gh",
            "module": "gh"
        },
        {
            "file": "wall.js",
            "line": 7,
            "description": "Description",
            "itemtype": "method",
            "name": "Wall",
            "params": [
                {
                    "name": "side1",
                    "description": ""
                },
                {
                    "name": "x1",
                    "description": ""
                },
                {
                    "name": "y1",
                    "description": ""
                },
                {
                    "name": "side2",
                    "description": ""
                },
                {
                    "name": "x2",
                    "description": ""
                },
                {
                    "name": "y2",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "",
            "module": "gh"
        },
        {
            "file": "wall.js",
            "line": 32,
            "description": "INPUT\n      context: the context upon which to draw\n      x, y:    the x and y pixel coordinates of the cell\n      scale:   the scale at which to draw the walls\n      sprites: a list of sprites loaded into memory.  Not used by Wall at\n               this juncture.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "context",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "size",
                    "description": ""
                },
                {
                    "name": "scale",
                    "description": ""
                },
                {
                    "name": "sprites",
                    "description": ""
                },
                {
                    "name": "side",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "",
            "module": "gh"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: subclass",
            "line": " trigger.js:45"
        },
        {
            "message": "Missing item type\nGet the borders",
            "line": " File\\json.js:189"
        },
        {
            "message": "Missing item type\nTO DO\n   Separate the display to include a 'board' and a 'hud'.\n   The 'board' is intended to display the active game.\n   The hud displays the user interaction tools.  EG, weapon slots,\n   spells, potions, etc...\n\n   Consider having the display 'listen' for changes to the keyboard state.",
            "line": " Graphics\\display.js:1"
        },
        {
            "message": "Missing item type\nGlobals",
            "line": " Graphics\\sprite.js:23"
        },
        {
            "message": "Missing item type\nPrivate globals",
            "line": " User Interface\\hud.js:8"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " User Interface\\hud.js:18"
        },
        {
            "message": "Missing item type\nif(!this.currentTurn){\n\treturn;\n}",
            "line": " agent.js:93"
        },
        {
            "message": "Missing item type\nDoes the agent have any movement left?",
            "line": " agent.js:101"
        },
        {
            "message": "Missing item type\nIf the border of the cell would block movement in the desired direction return.",
            "line": " agent.js:119"
        },
        {
            "message": "Missing item type\nIs the desired destination a \"walkable\" cell",
            "line": " agent.js:153"
        },
        {
            "message": "Missing item type\nCheck to see if the target cell is already occupied by another agent.",
            "line": " agent.js:163"
        },
        {
            "message": "Missing item type\nThe move is valid.",
            "line": " agent.js:172"
        },
        {
            "message": "Missing item type\nRemove the map's current reference to the agent.",
            "line": " agent.js:178"
        },
        {
            "message": "Missing item type\nUpdate the agents knowledge of its own location.",
            "line": " agent.js:190"
        },
        {
            "message": "Missing item type\nUpdate the agents location on the map",
            "line": " agent.js:196"
        },
        {
            "message": "Missing item type\nUpdate the map visiblity",
            "line": " agent.js:202"
        },
        {
            "message": "Missing item type\nPublic globals.",
            "line": " gh.js:15"
        },
        {
            "message": "Missing item type\nPublic methods",
            "line": " gh.js:21"
        },
        {
            "message": "Missing item type\nPublic globals.",
            "line": " gh.js.bak.js:15"
        },
        {
            "message": "Missing item type\nLoad the dice sprite sheet",
            "line": " gh.js.bak.js:42"
        },
        {
            "message": "Missing item type\nPrivate Globals",
            "line": " messagePump.js:5"
        },
        {
            "message": "Missing item type\nSetup message listeners",
            "line": " stateGame.js:29"
        },
        {
            "message": "Missing item type\nHandle mouse input.",
            "line": " stateGame.js:92"
        },
        {
            "message": "Missing item type\nHandle keyboard input.",
            "line": " stateGame.js:103"
        },
        {
            "message": "Missing item type\nDraw the game board",
            "line": " stateGame.js:198"
        },
        {
            "message": "Missing item type\nDraw the hud",
            "line": " stateGame.js:214"
        },
        {
            "message": "Missing item type\nPrivate globals",
            "line": " stateSetup.js:39"
        },
        {
            "message": "Missing item type\nPublic globals",
            "line": " stateSetup.js:44"
        },
        {
            "message": "Missing item type\nWhat sort of turn structure do I want.\nSort first by teams.  Each team goes at one time.\nThis should be a list to allow for easy rotation.\nAssume the players belong to one team.",
            "line": " turn.js:1"
        }
    ]
}